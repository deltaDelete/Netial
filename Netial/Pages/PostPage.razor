@page "/post/{id}"
@using Netial.Database
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationContext> DbFactory

<PageTitle>Пост - Netial</PageTitle>

<div class="flex-column flex-x-center flex-y-center gap-3">
    @if (_isValidId) {
        var post = DbFactory.CreateDbContext().Posts.Find(PostId);
        <PostComponent Post="post"/>
        <div class="flex-column netial-post p-3 flex-y-center flex-x-left" style="border-radius: var(--netial-primary-radius); background-color: var(--netial-container-bg);">
            <form action="/comments/new/@post.Id" method="post" target="dummyframe" style="width: 100%;">
                <p class="form-floating">
                    <textarea maxlength="300" type="text" wrap="soft" required="required" id="text" name="text" class="input form-control" placeholder=" " style="background-color: var(--netial-body-bg); color: var(--netial-primary-color);"/>
                    <label for="text">Текст</label>
                </p>
                <div class="flex-row gap-2" style="justify-content: end;">
                    <Button Type="submit" Selected="true" Text="Отправить" OnClick="@(() => InvokeAsync(StateHasChanged))"/>
                </div>
            </form>
        </div>
        <div class="flex-column flex-y-center flex-x-left" style="border-radius: var(--netial-primary-radius); background-color: var(--netial-container-bg);">
            @foreach (var comment in post.Comments) {
                <CommentComponent Comment="comment"/>
            }
        </div>
    }
    else {
        <p>Неверный идентификатор поста {@Id}</p>
    }
</div>

@code {

    [Parameter]
    public string Id { get; set; }

    public Guid PostId { get; set; }

    private bool _isValidId = true;

    public override async Task SetParametersAsync(ParameterView parameters) {
        await base.SetParametersAsync(parameters);

        if (Guid.TryParse(Id, out Guid postId)) {
            PostId = postId;
        }
        else {
            _isValidId = false;
        }
    }

}